<?php
class Hello extends CI_Controller{
	public function curl_post_ssl($url, $vars, $second=30,$aHeader=array()){
		$ch = curl_init();
		//超时时间
		curl_setopt($ch,CURLOPT_TIMEOUT,$second);
		curl_setopt($ch,CURLOPT_RETURNTRANSFER, 1);
		//这里设置代理，如果有的话
		//curl_setopt($ch,CURLOPT_PROXY, '10.206.30.98');
		//curl_setopt($ch,CURLOPT_PROXYPORT, 8080);
		curl_setopt($ch,CURLOPT_URL,$url);
		curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,false);
		curl_setopt($ch,CURLOPT_SSL_VERIFYHOST,false);
	  
		//以下两种方式需选择一种
	  
		//第一种方法，cert 与 key 分别属于两个.pem文件
		//默认格式为PEM，可以注释
		curl_setopt($ch,CURLOPT_SSLCERTTYPE,'PEM');
		curl_setopt($ch,CURLOPT_SSLCERT,getcwd().'/application/controllers/apiclient_cert.pem');
		//return getcwd().'/application/controllers/apiclient_cert.pem';
		//默认格式为PEM，可以注释
		curl_setopt($ch,CURLOPT_SSLKEYTYPE,'PEM');
		curl_setopt($ch,CURLOPT_SSLKEY,getcwd().'/application/controllers/apiclient_key.pem');
	  
		curl_setopt($ch,CURLOPT_CAINFO,'PEM');
		curl_setopt($ch,CURLOPT_CAINFO,getcwd().'/application/controllers/rootca.pem');
	  
		//第二种方式，两个文件合成一个.pem文件
		//curl_setopt($ch,CURLOPT_SSLCERT,getcwd().'/all.pem');
	  
		if( count($aHeader) >= 1 ){
		    curl_setopt($ch, CURLOPT_HTTPHEADER, $aHeader);
		}
	  
		curl_setopt($ch,CURLOPT_POST, 1);
		curl_setopt($ch,CURLOPT_POSTFIELDS,$vars);
		$data = curl_exec($ch);
		if($data){
		    curl_close($ch);
		    return $data;
		}
		else { 
		    $error = curl_errno($ch);
		    //return $error;
		    //echo "call faild, errorCode:$error\n"; 
		    curl_close($ch);
		    return false;
		}
    }
	/**
 	* 生成随机数
	 */     
	public function great_rand(){
	    $str = '1234567890abcdefghijklmnopqrstuvwxyz';
	    for($i=0;$i<30;$i++){
		$j=rand(0,35);
		$t1 .= $str[$j];
	    }
	    return $t1;    
	}
	/*
	例如：
	appid：    wxd111665abv58f4f
	mch_id：    10000100
	device_info：  1000
	Body：    test
	nonce_str：  ibuaiVcKdpRxkhJA
	第一步：对参数按照 key=value 的格式，并按照参数名 ASCII 字典序排序如下：
	stringA="appid=wxd930ea5d5a258f4f&body=test&device_info=1000&mch_i
	d=10000100&nonce_str=ibuaiVcKdpRxkhJA";
	第二步：拼接支付密钥：
	stringSignTemp="stringA&key=192006250b4c09247ec02edce69f6a2d"
	sign=MD5(stringSignTemp).toUpperCase()="9A0A8659F005D6984697E2CA0A
	9CF3B7"
	*/
	protected function get_sign($data){
	    	$key = "";
		ksort($data);
		$stringA = '';
		$i=0;
		foreach($data as $k => $v) :
			$stringA .= $k."=".$v.'&';
		endforeach;
		//return $stringA;
		$stringSignTemp = $stringA.'key='.$key;
		return strtoupper(md5($stringSignTemp));
 
	}
	/**
     * 微信支付
     * @param string $openid 用户openid
     */
    public function pay($re_openid)
    {
	$data['mch_id'] = '';//商户Id
	$data['mch_billno'] = $data['mch_id'].date('YmdHis').rand(1000,9999);//订单号	
	$data['nonce_str'] = $this->great_rand();//随机字符串
	$data['wxappid'] = "";//公众账号ID
	$data['send_name'] = "公主岭在线生活测试";//红包发送者名称
	$data['total_amount'] = 100;//付款金额，单位分
	$data['act_name'] = '测试';//活劢名称
	$data['remark'] = '第一次测试!';//备注信息
	$data['client_ip'] = '';//调用接口的机器 Ip 地址
	$data['wishing'] = "祝我测试成功!";//红包祝福诧
	$data['total_num'] = 1;//红包数
	$data['re_openid'] = $re_openid;
	$sign = $this->get_sign($data);
	//return $sign;
	$template = "<xml>
	<sign><![CDATA[%s]]></sign>
	<mch_billno><![CDATA[%s]]></mch_billno>
	<mch_id><![CDATA[%s]]></mch_id>
	<wxappid><![CDATA[%s]]></wxappid>
	<send_name><![CDATA[%s]]></send_name>
	<re_openid><![CDATA[%s]]></re_openid>
	<total_amount><![CDATA[%d]]></total_amount>
	<total_num><![CDATA[%d]]></total_num>
	<wishing><![CDATA[%s]]></wishing>
	<client_ip><![CDATA[%s]]></client_ip>
	<act_name><![CDATA[%s]]></act_name>
	<remark><![CDATA[%s]]></remark>
	<nonce_str><![CDATA[%s]]></nonce_str>
	</xml>";
        $postXml = sprintf($template, $sign, $data['mch_billno'], $data['mch_id'], $data['wxappid'], $data['send_name'], $data['re_openid'],$data['total_amount'], $data['total_num'], $data['wishing'], $data['client_ip'], $data['act_name'], $data['remark'], $data['nonce_str']);     
	$url = 'https://api.mch.weixin.qq.com/mmpaymkttransfers/sendredpack';
	//$objet = simplexml_load_string($postXml);
	//return  $objet->wxappid;
	$responseXml = $this->curl_post_ssl($url, $postXml);	
        //用作结果调试输出
	/*if($responseXml)
	{
		return $responseXml;
	}else{
		return "false";
	}*/
        //echo htmlentities($responseXml,ENT_COMPAT,'UTF-8');
    	$responseObj = simplexml_load_string($responseXml, 'SimpleXMLElement', LIBXML_NOCDATA);
    	return $responseObj->return_msg;
	//return "测试";
    }

    public function index(){
		//获得参数 signature nonce token timestamp echostr
		$nonce     = $_GET['nonce'];
		$token     = 'gzlhsh';
		$timestamp = $_GET['timestamp'];
		$echostr   = $_GET['echostr'];
		$signature = $_GET['signature'];
		//形成数组，然后按字典序排序
		$array = array();
		$array = array($nonce, $timestamp, $token);
		sort($array);
		//拼接成字符串,sha1加密 ，然后与signature进行校验
		$str = sha1( implode( $array ) );
		if( $str  == $signature && $echostr ){
			//第一次接入weixin api接口的时候
			echo  $echostr;
			exit;
		}else{
			$this->reponseMsg();
		}
	}
	// 接收事件推送并回复
	public function reponseMsg(){
		//1.获取到微信推送过来post数据（xml格式）
		$postArr = $GLOBALS['HTTP_RAW_POST_DATA'];
		//2.处理消息类型，并设置回复类型和内容
		/*<xml>
		<ToUserName><![CDATA[toUser]]></ToUserName>
		<FromUserName><![CDATA[FromUser]]></FromUserName>
		<CreateTime>123456789</CreateTime>
		<MsgType><![CDATA[event]]></MsgType>
		<Event><![CDATA[subscribe]]></Event>
		</xml>*/
		$postObj = simplexml_load_string( $postArr );
		//$postObj->ToUserName = '';
		//$postObj->FromUserName = '';
		//$postObj->CreateTime = '';
		//$postObj->MsgType = '';
		//$postObj->Event = '';
		// gh_e79a177814ed
		//判断该数据包是否是订阅的事件推送
		if( strtolower( $postObj->MsgType) == 'event'){
			//如果是关注 subscribe 事件
			if( strtolower($postObj->Event == 'subscribe') ){
				//回复用户消息(纯文本格式)	
				$toUser   = $postObj->FromUserName;
				$fromUser = $postObj->ToUserName;
				$time     = time();
				$msgType  =  'text';
				$content  = '欢迎关注我们的微信公众账号'.$postObj->FromUserName.'-'.$postObj->ToUserName;
				$template = "<xml>
							<ToUserName><![CDATA[%s]]></ToUserName>
							<FromUserName><![CDATA[%s]]></FromUserName>
							<CreateTime>%s</CreateTime>
							<MsgType><![CDATA[%s]]></MsgType>
							<Content><![CDATA[%s]]></Content>
							</xml>";
				$info     = sprintf($template, $toUser, $fromUser, $time, $msgType, $content);
				echo $info;
				/*<xml>
				<ToUserName><![CDATA[toUser]]></ToUserName>
				<FromUserName><![CDATA[fromUser]]></FromUserName>
				<CreateTime>12345678</CreateTime>
				<MsgType><![CDATA[text]]></MsgType>
				<Content><![CDATA[你好]]></Content>
				</xml>*/
			

			}
	}
	if(strtolower($postObj->MsgType) == 'text' && trim($postObj->Content)=='红包测试'){
				$result = $this->pay($postObj->FromUserName);
				//$result = '服务号正在维护升级,给你带来的不便敬请谅解,后续将会有更多功能上线,让我们拭目以待!';
				//注意模板中的中括号 不能少 也不能多
				$template = "<xml>
					<ToUserName><![CDATA[%s]]></ToUserName>
					<FromUserName><![CDATA[%s]]></FromUserName>
					<CreateTime>%s</CreateTime>
					<MsgType><![CDATA[%s]]></MsgType>
					<Content><![CDATA[%s]]></Content>
					</xml>";
				$fromUser = $postObj->ToUserName;
				$toUser   = $postObj->FromUserName; 
				$time     = time();
				$msgType  = 'text';
				echo sprintf($template, $toUser, $fromUser, $time, $msgType, $result);

		}else{
			switch( trim($postObj->Content) ){
				case 1:
					$content = '您输入的数字是1'.$postObj->FromUserName.'-'.$postObj->ToUserName;;
				break;
				case 2:
					$content = '您输入的数字是2';
				break;
				case 3:
					$content = '您输入的数字是3';
				break;
				case 4:
					$content = "<a href='http://www.imooc.com'>慕课</a>";
				break;
				case '英文':
					$content = 'imooc is ok';
				break;
				default :$content = '服务号正在维护升级,给你带来的不便敬请谅解,后续将会有更多功能上线,让我们拭目以待!';
			}	
				$template = "<xml>
<ToUserName><![CDATA[%s]]></ToUserName>
<FromUserName><![CDATA[%s]]></FromUserName>
<CreateTime>%s</CreateTime>
<MsgType><![CDATA[%s]]></MsgType>
<Content><![CDATA[%s]]></Content>
</xml>";
//注意模板中的中括号 不能少 也不能多
				$fromUser = $postObj->ToUserName;
				$toUser   = $postObj->FromUserName; 
				$time     = time();
				// $content  = '18723180099';
				$msgType  = 'text';
				echo sprintf($template, $toUser, $fromUser, $time, $msgType, $content);
			
		}//if end
	}//reponseMsg end
	
}
?>
